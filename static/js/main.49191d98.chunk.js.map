{"version":3,"sources":["components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","users","setUsers","usersToDisplay","setUsersToDisplay","sortDirection","setSortDirection","searchTerm","setSearchTerm","useEffect","axios","get","then","response","console","log","data","results","sortByNameAsc","sortedUsers","sort","a","b","aValue","name","first","bValue","sortByNameDesc","onSubmit","e","preventDefault","filteredUsers","filter","user","phone","includes","type","placeholder","value","onChange","target","className","scope","onClick","map","index","id","src","picture","thumbnail","alt","last","email","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA4HeA,EAzHD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAE0BF,mBAAS,IAFnC,mBAEXG,EAFW,KAEKC,EAFL,OAGwBJ,mBAAS,OAHjC,mBAGXK,EAHW,KAGIC,EAHJ,OAIkBN,mBAAS,IAJ3B,mBAIXO,EAJW,KAICC,EAJD,KAMlBC,qBAAU,WACRC,IAAMC,IAAI,yCAAyCC,MAAK,SAACC,GACvDC,QAAQC,IAAIF,EAASG,MACrBZ,EAAkBS,EAASG,KAAKC,SAChCf,EAASW,EAASG,KAAKC,cAExB,IAEH,IAuBMC,EAAgB,WACpB,IACMC,EADS,YAAOlB,GACQmB,MAAK,SAACC,EAAGC,GACrC,IAAMC,EAASF,EAAEG,KAAKC,MAChBC,EAASJ,EAAEE,KAAKC,MACtB,OAAIF,EAASG,GACH,EAENH,EAASG,EACJ,EAEF,KAETZ,QAAQC,IAAII,GACZf,EAAkBe,IAGdQ,EAAiB,WACrB,IACMR,EADS,YAAOlB,GACQmB,MAAK,SAACC,EAAGC,GACrC,IAAMC,EAASF,EAAEG,KAAKC,MAChBC,EAASJ,EAAEE,KAAKC,MACtB,OAAIF,EAASG,GACH,EAENH,EAASG,EACJ,EAEF,KAETZ,QAAQC,IAAII,GACZf,EAAkBe,IAGpB,OACE,gCACE,8BACI,uBAAMS,SA5DO,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAgB9B,EAAM+B,QAAO,SAACC,GAClC,OAAOA,EAAKC,MAAMC,SAAS5B,MAG7BH,EAAkB2B,IAsDZ,UACF,uBACEK,KAAK,OACLC,YAAY,+BACZb,KAAK,aACLc,MAAO/B,EACPgC,SAAU,SAACV,GACTrB,EAAcqB,EAAEW,OAAOF,UAG3B,wBAAQG,UAAU,kBAAlB,yBAGF,8BACE,wBAAOA,UAAU,oCAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,QAlET,WACK,QAAlBtC,GACFa,IACAZ,EAAiB,UAEjBqB,IACArB,EAAiB,SA4DT,kBAGA,oBAAIoC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGvC,EAAeyC,KAAI,SAACX,EAAMY,GAAP,OAClB,+BACE,oBAAIH,MAAM,MAAV,SAAiBT,EAAKa,GAAGR,QACzB,6BACE,qBAAKS,IAAKd,EAAKe,QAAQC,UAAWC,IAAKjB,EAAKT,KAAKC,UAEnD,+BACGQ,EAAKT,KAAKC,MADb,IACqBQ,EAAKT,KAAK2B,QAE/B,6BAAKlB,EAAKmB,QACV,6BAAKnB,EAAKC,UATHW,iBCtFRQ,MAhBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,qBAAKb,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,eCECc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49191d98.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Table = () => {\n  const [users, setUsers] = useState([]);\n  const [usersToDisplay, setUsersToDisplay] = useState([]);\n  const [sortDirection, setSortDirection] = useState(\"asc\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api/?results=50\").then((response) => {\n      console.log(response.data);\n      setUsersToDisplay(response.data.results);\n      setUsers(response.data.results);\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const filteredUsers = users.filter((user) => {\n      return user.phone.includes(searchTerm);\n    });\n\n    setUsersToDisplay(filteredUsers);\n  };\n\n  const handleReset = () => {\n    setUsersToDisplay(users);\n  };\n\n  const sortByName = () => {\n    if (sortDirection === \"asc\") {\n      sortByNameAsc();\n      setSortDirection(\"desc\");\n    } else {\n      sortByNameDesc();\n      setSortDirection(\"asc\");\n    }\n  };\n\n  const sortByNameAsc = () => {\n    const tempUsers = [...users];\n    const sortedUsers = tempUsers.sort((a, b) => {\n      const aValue = a.name.first;\n      const bValue = b.name.first;\n      if (aValue < bValue) {\n        return -1;\n      }\n      if (aValue > bValue) {\n        return 1;\n      }\n      return 0;\n    });\n    console.log(sortedUsers);\n    setUsersToDisplay(sortedUsers);\n  };\n\n  const sortByNameDesc = () => {\n    const tempUsers = [...users];\n    const sortedUsers = tempUsers.sort((a, b) => {\n      const aValue = a.name.first;\n      const bValue = b.name.first;\n      if (aValue > bValue) {\n        return -1;\n      }\n      if (aValue < bValue) {\n        return 1;\n      }\n      return 0;\n    });\n    console.log(sortedUsers);\n    setUsersToDisplay(sortedUsers);\n  };\n\n  return (\n    <div>\n      <div>\n          <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter phone number to filter\"\n          name=\"searchTerm\"\n          value={searchTerm}\n          onChange={(e) => {\n            setSearchTerm(e.target.value);\n          }}\n        ></input>\n        <button className=\"btn btn-primary\">Search</button>\n        </form>\n      </div>\n      <div>\n        <table className=\"table table-success table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Photo</th>\n              <th scope=\"col\" onClick={sortByName}>\n                Name\n              </th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n          </thead>\n          <tbody>\n            {usersToDisplay.map((user, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{user.id.value}</th>\n                <td>\n                  <img src={user.picture.thumbnail} alt={user.name.first}></img>\n                </td>\n                <td>\n                  {user.name.first} {user.name.last}\n                </td>\n                <td>{user.email}</td>\n                <td>{user.phone}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import { HashRouter as Router } from \"react-router-dom\";\nimport Table from \"./components/Table/Table\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"App\">\n              <Table />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}